/*
 * generated by Xtext
 */
package es.unican.lavoisier.ui.contentassist

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class LavoisierProposalProvider extends AbstractLavoisierProposalProvider {
//                                implements IDomainModelUser {

//  private EPackage domainModel
//
//  override setDomainModel(EPackage domainModel) {
//    this.domainModel = domainModel
//  }
//
//  new() {
//    super()
//    DomainModelProvider::linkDomainModel(this)
//  }
//
//  override public void complete_ID(EObject model, RuleCall ruleCall,
//      ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//    // IDs suggestions not desired
//  }
//
//  override public void completeMainClass_Name(EObject model, Assignment assignment,
//      ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//    if (domainModel == null) {
//      return
//    }
//    for (element : domainModel.EClassifiers) {
//      if (element instanceof EClass) {
//        acceptor.accept(createCompletionProposal((element as EClass).name, context))
//      }
//    }
//  }
//
//  override public void completeReferredClass_Name(EObject model, Assignment assignment,
//      ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
//    if (domainModel == null) {
//      return
//    }
//    val projection = model as Projection
//    if (projection != null &&
//        projection.mainClass != null) {
//      val mainEClass =
//          domainModel.getEClassifier(projection.mainClass.name) as EClass
//      if (mainEClass != null) {
//        for (reference : mainEClass.EReferences){
//          val refEClassName = reference.EReferenceType.name
//          acceptor.accept(createCompletionProposal(refEClassName, context))
//        }
//      }
//    }
//  }
//
//  override public void completeReferredClass_Reference(EObject model,
//      Assignment assignment, ContentAssistContext context,
//      ICompletionProposalAcceptor acceptor) {
//    if (domainModel == null) {
//      return
//    }
//    val referredClass = model as ReferredClass
//    if (referredClass != null) {
//      val refEClass = domainModel.getEClassifier(referredClass.name) as EClass
//      val mainClass = (referredClass.eContainer as Projection).mainClass
//      val mainEClass = domainModel.getEClassifier(mainClass.name) as EClass
//      for (reference : mainEClass.EReferences) {
//        if (reference.EReferenceType.equals(refEClass)) {
//          acceptor.accept(createCompletionProposal(reference.name, context))
//        }
//      }
//    }
//  }
}
